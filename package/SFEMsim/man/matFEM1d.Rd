% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{matFEM1d}
\alias{matFEM1d}
\title{Mass and stiffness matrices for 1D surfaces}
\usage{
matFEM1d(
  nodeMat,
  triMat,
  triMetricMat,
  triPotCoeffs = NULL,
  triDiffCoeffs = NULL,
  massLumping = TRUE
)
}
\arguments{
\item{nodeMat}{Array containing the coordinates of the triangulation nodes}

\item{triMat}{Array containing, for each triangle, the node indices (starting at 1).}

\item{triMetricMat}{Array containing, for each triangle, the coefficients of the metric tensor of each triangle.}

\item{triPotCoeffs}{Array containing, for each triangle, the value of the potential function \eqn{V}. If set to \code{NULL} (Default), no potential function is considered.}

\item{triDiffCoeffs}{Array containing, for each triangle, the coefficients of the modified metric tensor associated with the diffusion matrix \eqn{A}. If set to \code{NULL} (Default), the usual metric is considered (which corresponds to the case where \eq{A} is the identity matrix).}

\item{massLumping}{logical; TRUE (Default) = Compute mass lumping approximation of mass matrix, FALSE = Compute true mass matrix.}
}
\value{
List with entries:
\describe{
  \item{\code{Shift}}{Scaled stiffness matrix \eqn{S}}
  \item{\code{Scale}}{Scaling matrix \eqn{\hat{C}^{-1/2}}}
  \item{\code{Eig}}{Interval containing the eigenvalues of \eqn{S}}
  \item{\code{Mass}}{Mass matrix \eqn{C} or its mass-lumped approximation  \eqn{\hat{C}} (stored as an array if mass lumping is applied, and a sparse matrix otherwise)}
  \item{\code{Stiff}}{Stiffness matrix \eqn{R}}
}
}
\description{
Computes the mass and stiffness matrices associated with a second-order elliptic symmetric operator \eqn{L=-\text{div}(A \nabla) + V}.
}
\details{
We consider second-order elliptic symmetric operators \eqn{L} of the form \deqn{L=-\text{div}(A \nabla) + V} where \eqn{V} denotes a so-called potential function taking postive values,
\eqn{A} denotes a (linear) operator mapping tangent vectors at a given point to tangent vectors at the same point, \eqn{\test{div}} denotes the divergence operator, and \eqn{\nabla} denotes the gradient operator.

The function returns the mass and stiffness matrices associated with linear finite elements on a mesh. The mass matrix \eqn{C} contains entries \eqn{[(\psi_i, \psi_j)]_{1 \le i,j \le n}},
the mass lumped matrix  \eqn{\hat{C}} is diagonal with entries \eqn{[(\psi_i, 1)]_{1 \le i\le n}},
the stiffness matrix \eqn{R} contains entries \eqn{[(V\psi_i, \psi_j)+(A\nabla\psi_i, \nabla\psi_j)]_{1 \le i,j \le n}}
The scaled stiffness matrix is defined as \eqn{S=\hat{C}^{-1/2}R\hat{C}^{-1/2}}.

The coefficients in \code{triMetricMat} can be computed using the function \code{triMetricPull1d}.

Since we are in 1D, \code{triDiffCoeffs} and \code{triPotCoeffs} are just matrices with a single column and positive values.

The coefficients in \code{triDiffCoeffs} correspond to the overall tensor, in local coordinates, that allows us to compute the
\eqn{(A\nabla\psi_i, \nabla\psi_j)} using the gradients of \eqn{\psi_i} and \eqn{\psi_j} as computed in the reference simplex.
}
